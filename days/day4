package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	_ "strconv"
	"strings"
)

func main() {
	result := checkRanges()

	fmt.Println(result)
}

func checkRanges() (fullyEncompassingResult int) {
	var fullyEncompassingTotal int
	file, err := os.Open("./Input/input.txt")
	if err != nil {
		panic(err)
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	for scanner.Scan() {
		currLine := scanner.Text()
		currLineSplit := strings.Split(currLine, ",")
		firstRange := strings.Split(currLineSplit[0], "-")
		secondRange := strings.Split(currLineSplit[1], "-")

		firstStart, err := strconv.Atoi(firstRange[0])
		if err != nil {
			panic(err)
		}
		firstEnd, err := strconv.Atoi(firstRange[1])
		if err != nil {
			panic(err)
		}
		secondStart, err := strconv.Atoi(secondRange[0])
		if err != nil {
			panic(err)
		}
		secondEnd, err := strconv.Atoi(secondRange[1])
		if err != nil {
			panic(err)
		}

		fullyEncompassingTotal = fullyEncompassing(firstStart, firstEnd, secondStart, secondEnd)

	}

	return fullyEncompassingTotal
}

func fullyEncompassing(firstStart int, firstEnd int, secondStart int, secondEnd int) (result int) {

	if (firstStart >= secondStart) && (firstEnd <= secondEnd) {
		return 1
	} else if (secondStart >= firstStart) && (secondEnd <= firstEnd) {
		return 1
	}

	return 0

}
